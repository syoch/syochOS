Contents of section .data:
 003e fabe 3b7de87c 00ba0800 be367ce8 8900 ..;}.|.....6|...
 004e ba08 00be2b7c e85c00be 207de864 00be ....+|.\.. }.d..
 005e 297d e84200b4 00b200cd 137200f4 8b1e )}.B.......r....
 006e 437d 03060e7c 91a1167c f726107c 91e8 C}...|...|.&.|..
 007e 6f00 031e0b7c 4049e302 ebf3f431 d2f7 o....|@I.....1..
 008e 3618 7cfec288 16457d31 d2f7361a 7c88 6.|....E}1..6.|.
 009e 1646 7da2477d c35053e8 1700be41 7de8 .F}.G}.PS....A}.
 00ae 1100 5b58c350 53e81f00 be417de8 0300 ..[X.PS....A}...
 00be 5b58 c350538a 04463c00 740ab40e b700 [X.PS..F<.t.....
 00ce b307 cd10ebef 5b58c350 538a0446 4a83 ......[X.PS..FJ.
 00de fa00 740ab40e b700b307 cd10ebed 5b58 ..t...........[X
 00ee c3bf 05005053 51e893ff b402b001 8a2e ....PSQ.........
 00fe 477d 8a0e457d 8a36467d 8a16247c cd13 G}..E}.6F}..$|..
 010e 730c 31c0cd13 4f595b58 75d8cd18 595b s.1...OY[Xu...Y[
 011e 58c3  

+ 00:   eb 3c                   jmp    0x3e
+ 3e:	fa                   	cli    
+ 3f:	be 3b 7d             	mov    si,0x7d3b
* 42:	e8 7c 00             	call   0xc1
+ 45:	ba 08 00             	mov    dx,0x8
+ 48:	be 36 7c             	mov    si,0x7c36
+ 4b:	e8 89 00             	call   0xd7
+ 4e:	ba 08 00             	mov    dx,0x8
+ 51:	be 2b 7c             	mov    si,0x7c2b
+ 54:	e8 5c 00             	call   0xb3
+ 57:	be 20 7d             	mov    si,0x7d20
+ 5a:	e8 64 00             	call   0xc1
+ 5d:	be 29 7d             	mov    si,0x7d29
+ 60:	e8 42 00             	call   0xa5
+ 63:	b4 00                	mov    ah,0x0
+ 65:	b2 00                	mov    dl,0x0
+ 67:	cd 13                	int    0x13
  69:	72 00                	jb     0x6b
  6b:	f4                   	hlt      
  6c:	8b 1e 43 7d          	mov    bx,WORD PTR ds:0x7d43
  70:	03 06 0e 7c          	add    ax,WORD PTR ds:0x7c0e
  74:	91                   	xchg   cx,ax
  75:	a1 16 7c             	mov    ax,ds:0x7c16
  78:	f7 26 10 7c          	mul    WORD PTR ds:0x7c10
  7c:	91                   	xchg   cx,ax
  7d:	e8 6f 00             	call   0xef
  80:	03 1e 0b 7c          	add    bx,WORD PTR ds:0x7c0b
  84:	40                   	inc    ax
  85:	49                   	dec    cx
  86:	e3 02                	jcxz   0x8a
  88:	eb f3                	jmp    0x7d
  8a:	f4                   	hlt    
  8b:	31 d2                	xor    dx,dx
  8d:	f7 36 18 7c          	div    WORD PTR ds:0x7c18
  91:	fe c2                	inc    dl
  93:	88 16 45 7d          	mov    BYTE PTR ds:0x7d45,dl
  97:	31 d2                	xor    dx,dx
  99:	f7 36 1a 7c          	div    WORD PTR ds:0x7c1a
  9d:	88 16 46 7d          	mov    BYTE PTR ds:0x7d46,dl
  a1:	a2 47 7d             	mov    ds:0x7d47,al
  a4:	c3                   	ret    
  a5:	50                   	push   ax
  a6:	53                   	push   bx
  a7:	e8 17 00             	call   0xc1
  aa:	be 41 7d             	mov    si,0x7d41
  ad:	e8 11 00             	call   0xc1
  b0:	5b                   	pop    bx
  b1:	58                   	pop    ax
  b2:	c3                   	ret    
  b3:	50                   	push   ax
  b4:	53                   	push   bx
  b5:	e8 1f 00             	call   0xd7
  b8:	be 41 7d             	mov    si,0x7d41
  bb:	e8 03 00             	call   0xc1
  be:	5b                   	pop    bx
  bf:	58                   	pop    ax
  c0:	c3                   	ret    
+ c1:	50                   	push   ax
+ c2:	53                   	push   bx
+ c3:	8a 04                	mov    al,BYTE PTR [si]
+ c5:	46                   	inc    si
+ c6:	3c 00                	cmp    al,0x0
+ c8:	74 0a                	je     0xd4
+ ca:	b4 0e                	mov    ah,0xe
+ cc:	b7 00                	mov    bh,0x0
+ ce:	b3 07                	mov    bl,0x7
+ d0:	cd 10                	int    0x10
+ d2:	eb ef                	jmp    0xc3
+ d4:	5b                   	pop    bx
+ d5:	58                   	pop    ax
+ d6:	c3                   	ret    
+ d7:	50                   	push   ax
+ d8:	53                   	push   bx
+ d9:	8a 04                	mov    al,BYTE PTR [si]
+ db:	46                   	inc    si
+ dc:	4a                   	dec    dx
+ dd:	83 fa 00             	cmp    dx,0x0
+ e0:	74 0a                	je     0xec
+ e2:	b4 0e                	mov    ah,0xe
+ e4:	b7 00                	mov    bh,0x0
+ e6:	b3 07                	mov    bl,0x7
+ e8:	cd 10                	int    0x10
* ea:	eb ed                	jmp    0xd9
  ec:	5b                   	pop    bx
  ed:	58                   	pop    ax
  ee:	c3                   	ret    
  ef:	bf 05 00             	mov    di,0x5
  f2:	50                   	push   ax
  f3:	53                   	push   bx
  f4:	51                   	push   cx
  f5:	e8 93 ff             	call   0x8b
  f8:	b4 02                	mov    ah,0x2
  fa:	b0 01                	mov    al,0x1
  fc:	8a 2e 47 7d          	mov    ch,BYTE PTR ds:0x7d47
 100:	8a 0e 45 7d          	mov    cl,BYTE PTR ds:0x7d45
 104:	8a 36 46 7d          	mov    dh,BYTE PTR ds:0x7d46
 108:	8a 16 24 7c          	mov    dl,BYTE PTR ds:0x7c24
 10c:	cd 13                	int    0x13
 10e:	73 0c                	jae    0x11c
 110:	31 c0                	xor    ax,ax
 112:	cd 13                	int    0x13
 114:	4f                   	dec    di
 115:	59                   	pop    cx
 116:	5b                   	pop    bx
 117:	58                   	pop    ax
 118:	75 d8                	jne    0xf2
 11a:	cd 18                	int    0x18
 11c:	59                   	pop    cx
 11d:	5b                   	pop    bx
 11e:	58                   	pop    ax
 11f:	c3                   	ret    

Symbols
120=String[ 9]:Loading\x20\x00
129=String[11]:Bootloader\x00
134=String[ 6]:fail\x20\x6f
13b=String[ 6]:Info\x20\x00

     0| 1| 2| 3| 4| 5| 6| 7
std:al|cl|dl|bl|ah|ch|dh|bh
adv:  |  |  |  |si|di|bp|sp
hib:ax|cx|dx|bx|si|di|bp|sp

push =sub(sp,a1s) *sp=a1d
pop  =a1d=*sp add(sp,a1s)
call =sp-css  *sp=cs jmp(imm)
ret  =cs=*sp add(sp,css)